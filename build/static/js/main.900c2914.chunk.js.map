{"version":3,"sources":["img/1.png","img/2.png","img/3.png","img/4.png","img/5.png","img/6.png","img/7.png","img/8.png","img/9.png","img/10.png","App.js","reportWebVitals.js","index.js"],"names":["GGaddress","App","useState","setError","data","setData","fetchData","window","ethereum","provider","ethers","providers","Web3Provider","contract","Contract","NftContract","abi","publicSalePrice","totalSupply","object","String","message","request","method","accounts","signer","getSigner","overrides","from","value","publicSaleMint","transaction","wait","releaseAll","setStep","useEffect","className","class","onClick","src","img1","alt","img2","img3","img4","img5","img6","img7","img8","img9","img10","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.900c2914.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.a738c882.png\";","export default __webpack_public_path__ + \"static/media/2.41f58a32.png\";","export default __webpack_public_path__ + \"static/media/3.b2892ee1.png\";","export default __webpack_public_path__ + \"static/media/4.d31c4e0c.png\";","export default __webpack_public_path__ + \"static/media/5.b86dede8.png\";","export default __webpack_public_path__ + \"static/media/6.19d1bd89.png\";","export default __webpack_public_path__ + \"static/media/7.e7988fc6.png\";","export default __webpack_public_path__ + \"static/media/8.de18e705.png\";","export default __webpack_public_path__ + \"static/media/9.96a79f80.png\";","export default __webpack_public_path__ + \"static/media/10.0c323acf.png\";","import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport NftContract from './artifacts/contracts/Nft.sol/NFTERC721A.json';\r\nimport './App.css';\r\nimport img1 from './img/1.png';\r\nimport img2 from './img/2.png';\r\nimport img3 from './img/3.png';\r\nimport img4 from './img/4.png';\r\nimport img5 from './img/5.png';\r\nimport img6 from './img/6.png';\r\nimport img7 from './img/7.png';\r\nimport img8 from './img/8.png';\r\nimport img9 from './img/9.png';\r\nimport img10 from './img/10.png';\r\n\r\n//mettre contrat ici\r\nconst GGaddress = \"0x6eE274b6CdA33eD7dD0979FeE2abb522b3988dCf\";\r\n\r\nfunction App() {\r\n\r\n  const [error, setError] = useState('');\r\n  const [data, setData] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  async function fetchData() {\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const contract = new ethers.Contract(GGaddress, NftContract.abi, provider);\r\n      try {\r\n        const publicSalePrice = await contract.publicSalePrice();\r\n        const totalSupply = await contract.totalSupply();\r\n        const object = {\"publicSalePrice\": String(publicSalePrice), \"totalSupply\": String(totalSupply)}\r\n        setData(object);\r\n      }\r\n      catch(err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function mint() {\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(GGaddress, NftContract.abi, signer);\r\n      try {\r\n        let overrides = {\r\n          from: accounts[0],\r\n          value: data.publicSalePrice\r\n        }\r\n        const transaction = await contract.publicSaleMint(accounts[0], 1, overrides);\r\n        await transaction.wait();\r\n        fetchData();\r\n      }\r\n      catch(err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function releaseAll(){\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      //let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(GGaddress, NftContract.abi, signer);\r\n      try {\r\n        //ici que ca change sinon on peut juste copier coller et changer la fonction apres contract.\r\n        const transaction = await contract.releaseAll();\r\n        await transaction.wait();\r\n      }\r\n      catch(err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function setStep(){\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      //let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const contract = new ethers.Contract(GGaddress, NftContract.abi, signer);\r\n      try {\r\n        const transaction = await contract.setStep(2);\r\n        await transaction.wait();\r\n      }\r\n      catch(err) {\r\n        setError(err.message);\r\n      }\r\n    }    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button class=\"releaseAll\" onClick={releaseAll}>Withdraw</button>\r\n      <button class=\"setStep\" onClick={setStep}>SetStep</button>\r\n      <div className=\"container\">\r\n        <div className=\"banniere\">\r\n          <img src={img1} alt=\"img\" />\r\n          <img src={img2} alt=\"img\" />\r\n          <img src={img3} alt=\"img\" />\r\n          <img src={img4} alt=\"img\" />\r\n          <img src={img5} alt=\"img\" />\r\n          <img src={img6} alt=\"img\" />\r\n          <img src={img7} alt=\"img\" />\r\n          <img src={img8} alt=\"img\" />\r\n          <img src={img9} alt=\"img\" />\r\n          <img src={img10} alt=\"img\" />\r\n        </div>\r\n        <br/>\r\n        You need be connected on Polygon Mainet with Metamask\r\n        {/* {error && <p>{error}</p>} */}\r\n        <h1>Mint a Pingouin NFT To save Biodiversity!</h1>\r\n        <p className=\"count\">{data.totalSupply} / 50</p>\r\n        <p className=\"cost\">Each Pingouin NFT costs {data.publicSalePrice / 10**18} Matic (excluding gas fees)</p>\r\n        <button onClick={mint}>BUY one Pingouin NFT</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}